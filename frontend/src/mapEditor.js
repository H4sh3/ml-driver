s = {

}

function setup() {
    initCanvas()
    s.roads = [
        new Line(417.59999999999997, 209.4808126410835, 371.2, 157.11060948081263),
        new Line(371.2, 261.8510158013544, 324.8, 209.4808126410835),
        new Line(417.59999999999997, 209.4808126410835, 464, 157.11060948081263),
        new Line(464, 261.8510158013544, 510.4, 209.4808126410835),
        new Line(464, 261.8510158013544, 510.4, 314.22121896162525),
        new Line(417.59999999999997, 314.22121896162525, 464, 366.59142212189613),
        new Line(417.59999999999997, 314.22121896162525, 371.2, 366.59142212189613),
        new Line(371.2, 261.8510158013544, 324.8, 314.22121896162525),
        new Line(371.2, 366.59142212189613, 324.8, 418.961625282167),
        new Line(324.8, 418.961625282167, 255.2, 445.14672686230244),
        new Line(255.2, 445.14672686230244, 162.4, 445.14672686230244),
        new Line(162.4, 445.14672686230244, 92.8, 418.961625282167),
        new Line(92.8, 418.961625282167, 46.4, 366.59142212189613),
        new Line(46.4, 366.59142212189613, 23.2, 288.0361173814898),
        new Line(23.2, 288.0361173814898, 23.2, 235.66591422121894),
        new Line(23.2, 235.66591422121894, 46.4, 157.11060948081263),
        new Line(46.4, 157.11060948081263, 92.8, 104.74040632054175),
        new Line(92.8, 104.74040632054175, 162.4, 78.55530474040631),
        new Line(162.4, 78.55530474040631, 255.2, 78.55530474040631),
        new Line(371.2, 157.11060948081263, 324.8, 104.74040632054175),
        new Line(324.8, 104.74040632054175, 255.2, 78.55530474040631),
        new Line(324.8, 209.4808126410835, 278.4, 157.11060948081263),
        new Line(324.8, 314.22121896162525, 301.59999999999997, 340.4063205417607),
        new Line(301.59999999999997, 340.4063205417607, 278.4, 366.59142212189613),
        new Line(278.4, 366.59142212189613, 232, 392.77652370203157),
        new Line(162.4, 392.77652370203157, 232, 392.77652370203157),
        new Line(162.4, 392.77652370203157, 116, 366.59142212189613),
        new Line(116, 366.59142212189613, 92.8, 314.22121896162525),
        new Line(278.4, 157.11060948081263, 232, 130.9255079006772),
        new Line(232, 130.9255079006772, 162.4, 130.9255079006772),
        new Line(162.4, 130.9255079006772, 116, 157.11060948081263),
        new Line(116, 157.11060948081263, 92.8, 209.4808126410835),
        new Line(92.8, 209.4808126410835, 92.8, 314.22121896162525),
        new Line(464, 157.11060948081263, 510.4, 104.74040632054175),
        new Line(510.4, 209.4808126410835, 556.8, 157.11060948081263),
        new Line(510.4, 314.22121896162525, 556.8, 366.59142212189613),
        new Line(464, 366.59142212189613, 510.4, 418.961625282167),
        new Line(510.4, 418.961625282167, 580, 445.14672686230244),
        new Line(556.8, 366.59142212189613, 603.1999999999999, 392.77652370203157),
        new Line(580, 445.14672686230244, 672.8, 445.14672686230244),
        new Line(603.1999999999999, 392.77652370203157, 672.8, 392.77652370203157),
        new Line(719.1999999999999, 366.59142212189613, 672.8, 392.77652370203157),
        new Line(672.8, 445.14672686230244, 742.4, 418.961625282167),
        new Line(742.4, 418.961625282167, 788.8, 366.59142212189613),
        new Line(788.8, 366.59142212189613, 812, 288.0361173814898),
        new Line(812, 235.66591422121894, 812, 288.0361173814898),
        new Line(719.1999999999999, 366.59142212189613, 742.4, 314.22121896162525),
        new Line(742.4, 314.22121896162525, 742.4, 209.4808126410835),
        new Line(812, 235.66591422121894, 788.8, 157.11060948081263),
        new Line(742.4, 209.4808126410835, 719.1999999999999, 157.11060948081263),
        new Line(788.8, 157.11060948081263, 742.4, 104.74040632054175),
        new Line(742.4, 104.74040632054175, 672.8, 78.55530474040631),
        new Line(672.8, 78.55530474040631, 603.1999999999999, 78.55530474040631),
        new Line(603.1999999999999, 78.55530474040631, 580, 78.55530474040631),
        new Line(580, 78.55530474040631, 510.4, 104.74040632054175),
        new Line(719.1999999999999, 157.11060948081263, 672.8, 130.9255079006772),
        new Line(672.8, 130.9255079006772, 603.1999999999999, 130.9255079006772),
        new Line(556.8, 157.11060948081263, 603.1999999999999, 130.9255079006772),
    ]
    s.checkpoints = [
        new Line(232, 130.9255079006772, 232, 78.55530474040631),
        new Line(278.4, 157.11060948081263, 324.8, 104.74040632054175),
        new Line(324.8, 209.4808126410835, 371.2, 157.11060948081263),
        new Line(371.2, 261.8510158013544, 417.59999999999997, 209.4808126410835),
        new Line(417.59999999999997, 314.22121896162525, 464, 261.8510158013544),
        new Line(464, 366.59142212189613, 510.4, 314.22121896162525),
        new Line(510.4, 418.961625282167, 556.8, 366.59142212189613),
        new Line(603.1999999999999, 445.14672686230244, 603.1999999999999, 392.77652370203157),
        new Line(672.8, 445.14672686230244, 672.8, 392.77652370203157),
        new Line(788.8, 366.59142212189613, 719.1999999999999, 366.59142212189613),
        new Line(812, 261.8510158013544, 740, 261.8510158013544),
        new Line(788.8, 157.11060948081263, 719.1999999999999, 157.11060948081263),
        new Line(672.8, 78.55530474040631, 672.8, 130.9255079006772),
        new Line(510.4, 104.74040632054175, 556.8, 157.11060948081263),
        new Line(464, 157.11060948081263, 510.4, 209.4808126410835),
        new Line(417.59999999999997, 209.4808126410835, 464, 261.8510158013544),
        new Line(371.2, 261.8510158013544, 417.59999999999997, 314.22121896162525),
        new Line(278.4, 366.59142212189613, 324.8, 418.961625282167),
        new Line(162.4, 392.77652370203157, 162.4, 445.14672686230244),
        new Line(92.8, 314.22121896162525, 23.2, 314.22121896162525),
        new Line(92.8, 235.66591422121894, 23.2, 235.66591422121894),
        new Line(116, 157.11060948081263, 46.4, 157.11060948081263),
        new Line(162.4, 130.9255079006772, 162.4, 78.55530474040631),
    ]

    s.grid = []

    const maxX = 40
    const maxY = 20

    for (let x = 1; x < maxX; x++) {
        for (let y = 1; y < maxY; y++) {
            s.grid.push(createVector((width / maxX) * x, (height / maxY) * y))
        }
    }

    s.bs = 30
    s.p1 = null
    s.editRoad = true
}

function draw() {
    background(120)

    s.grid.map(r => {
        if (createVector(mouseX, mouseY).dist(r) < 15) {
            fill(0, 255, 0)
        } else {
            fill(255)
        }
        ellipse(r.x, r.y, 3, 3)
    })

    stroke(0, 255, 0)
    s.checkpoints.map(l => {
        line(l.p1.x, l.p1.y, l.p2.x, l.p2.y)
    })
    stroke(0)
    s.roads.map(l => {
        line(l.p1.x, l.p1.y, l.p2.x, l.p2.y)
    })

    noStroke()
    if (s.editRoad) {
        text("ROAD MODE", 10, 10)
    } else {
        text("CHECKPOINT MODE", 10, 10)
    }
}

function keyPressed(value) {
    if (value.key === "Enter") {
        // switch mode
        s.editRoad = !s.editRoad
        s.p1 = null
    }
    console.log(value)
    if (value.code === "Space") {
        // console.log roads and checkpoints
        let roadStr = ''
        s.roads.map(x => {
            roadStr += `new Line(${x.p1.x},${x.p1.y},${x.p2.x},${x.p2.y}),\n`
        })
        console.log("roadStr")
        console.log(roadStr)

        let checkpointsStr = ''
        s.checkpoints.map(x => {
            checkpointsStr += `new Line(${x.p1.x},${x.p1.y},${x.p2.x},${x.p2.y}),\n`
        })
        console.log("checkpointsStr")
        console.log(checkpointsStr)
    }
}

function mousePressed() {
    let mX = 0
    let mY = 0
    s.grid.map(r => {
        if (createVector(mouseX, mouseY).dist(r) < 15) {
            mX = r.x
            mY = r.y
        }
    })
    if (s["p1"] != null) {
        const element = new Line(s["p1"].x, s["p1"].y, mX, mY)
        if (s.editRoad) {
            s.roads.push(element)
        } else {
            s.checkpoints.push(element)
        }
        s["p1"] = null
    } else {
        s["p1"] = {
            "x": mX,
            "y": mY,
        }
    }
}

initCanvas = () => {
    var canvasDiv = document.getElementById('p5-canvas');
    var width = canvasDiv.offsetWidth;
    const factor = width / 886
    canvasW = 886 * factor;
    canvasH = 500 * factor;
    canvas = createCanvas(canvasW, canvasH);
    canvas.parent('p5-canvas');
    return factor;
}